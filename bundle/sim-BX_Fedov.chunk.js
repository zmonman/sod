import{L as a,O as e,Q as t,m as s,k as l,n as o,o as r,X as n,q as i,T as c,Y as p,Z as d,_ as u,$ as S,a0 as h,a1 as m,K as f,x as g}from"./preset_utils-BsPg9Ll3.chunk.js";import{a7 as I,aD as R,a8 as T,aE as P,U as v,aa as k,ad as w,ae as A,ao as D,ay as y,aj as O,a6 as b,am as M,ak as E,an as F,S as H,a1 as L,aq as B,C,F as N,R as U}from"./detailed_results-DzdytCXS.chunk.js";const x=a({fieldName:"startingRage",label:"Starting Rage",labelTooltip:"Initial rage at the start of each iteration."}),q={inputs:[e({fieldName:"maulRageThreshold",label:"Maul Rage Threshold",labelTooltip:"Queue Maul when Rage is above this value."}),e({fieldName:"lacerateTime",label:"Lacerate Refresh Leeway",labelTooltip:"Refresh Lacerate when remaining duration is less than this value (in seconds)."}),t({fieldName:"maintainDemoralizingRoar",label:"Maintain Demo Roar",labelTooltip:"Keep Demoralizing Roar active on the primary target. If a stronger debuff is active, will not cast."})]},j={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{otherId:"OtherActionPotion"}}},doAtValue:{const:{val:"-1s"}}}],priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{and:{vals:[{cmp:{op:"OpEq",lhs:{auraNumStacks:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:48568}}},rhs:{const:{val:"5"}}}},{cmp:{op:"OpLe",lhs:{dotRemainingTime:{spellId:{spellId:48568}}},rhs:{const:{val:"1.5s"}}}}]}},castSpell:{spellId:{spellId:48568}}}},{action:{castSpell:{spellId:{spellId:48564}}}},{action:{condition:{and:{vals:[{gcdIsReady:{}},{not:{val:{spellIsReady:{spellId:{spellId:48564}}}}},{cmp:{op:"OpLe",lhs:{spellTimeToReady:{spellId:{spellId:48564}}},rhs:{const:{val:"1.2s"}}}}]}},wait:{duration:{spellTimeToReady:{spellId:{spellId:48564}}}}}},{action:{condition:{auraShouldRefresh:{auraId:{spellId:48560},maxOverlap:{const:{val:"1.5s"}}}},castSpell:{spellId:{spellId:48560}}}},{action:{castSpell:{spellId:{spellId:16857}}}},{action:{condition:{or:{vals:[{cmp:{op:"OpLt",lhs:{auraNumStacks:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:48568}}},rhs:{const:{val:"5"}}}},{cmp:{op:"OpLe",lhs:{dotRemainingTime:{spellId:{spellId:48568}}},rhs:{const:{val:"8s"}}}}]}},castSpell:{spellId:{spellId:48568}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRage:{}},rhs:{const:{val:"40"}}}},castSpell:{spellId:{spellId:48562}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentRage:{}},rhs:{const:{val:"25"}}}},castSpell:{spellId:{spellId:48480,tag:1}}}}]},z=s("Blank",{items:[]}),G={[I.Phase1]:[z],[I.Phase2]:[]},K=G[I.Phase1][0],W=R.create({maulRageThreshold:25,maintainDemoralizingRoar:!0,lacerateTime:8}),_=l("Default",j),Q={[I.Phase1]:[_],[I.Phase2]:[]},V={25:Q[I.Phase1][0],40:Q[I.Phase1][0]},X={name:"Standard",data:T.create({talentsString:"-503232132322010353120300313511-20350001"})},Y={[I.Phase1]:[X],[I.Phase2]:[]},Z=Y[I.Phase1][0],$=P.create({innervateTarget:v.create(),startingRage:20}),J=k.create({flask:w.FlaskUnknown,food:A.FoodUnknown}),aa=o(H.SpecFeralTankDruid,{cssClass:"feral-tank-druid-sim-ui",cssScheme:"druid",knownIssues:[],epStats:[D.StatStamina,D.StatStrength,D.StatAgility,D.StatAttackPower,D.StatMeleeHit,D.StatMeleeCrit,D.StatMeleeHaste,D.StatArmor,D.StatBonusArmor,D.StatDefense,D.StatDodge,D.StatNatureResistance,D.StatShadowResistance,D.StatFrostResistance],epPseudoStats:[y.PseudoStatMainHandDps],epReferenceStat:D.StatAttackPower,displayStats:[D.StatHealth,D.StatArmor,D.StatBonusArmor,D.StatStamina,D.StatStrength,D.StatAgility,D.StatAttackPower,D.StatMeleeHit,D.StatMeleeCrit,D.StatDefense,D.StatDodge,D.StatSpellHit,D.StatSpellCrit,D.StatNatureResistance,D.StatShadowResistance,D.StatFrostResistance],defaults:{gear:K.gear,epWeights:r.fromMap({[D.StatArmor]:3.5665,[D.StatBonusArmor]:.5187,[D.StatStamina]:7.3021,[D.StatStrength]:2.3786,[D.StatAgility]:4.4974,[D.StatAttackPower]:1,[D.StatMeleeHit]:2.9282,[D.StatMeleeCrit]:1.5143,[D.StatDefense]:1.8171,[D.StatDodge]:2.0196,[D.StatHealth]:.4465},{[y.PseudoStatMainHandDps]:0}),consumes:J,simpleRotation:W,talents:Z.data,specOptions:$,raidBuffs:O.create({powerWordFortitude:b.TristateEffectImproved,shadowProtection:!0,giftOfTheWild:b.TristateEffectImproved,thorns:b.TristateEffectImproved,strengthOfEarthTotem:b.TristateEffectRegular,battleShout:b.TristateEffectImproved,moonkinAura:!0}),partyBuffs:M.create({}),individualBuffs:E.create({blessingOfKings:!0,blessingOfMight:b.TristateEffectImproved}),debuffs:F.create({faerieFire:!0,exposeArmor:b.TristateEffectImproved})},playerIconInputs:[],rotationInputs:q,includeBuffDebuffInputs:[n,i],excludeBuffDebuffInputs:[],otherInputs:{inputs:[c,p,d,u,S,h,m,x,f]},encounterPicker:{showExecuteProportion:!1},presets:{talents:[...Y[I.Phase2],...Y[I.Phase1]],rotations:[...Q[I.Phase2],...Q[I.Phase1]],gear:[...G[I.Phase2],...G[I.Phase1]]},autoRotation:a=>V[a.getLevel()].rotation.rotation,raidSimPresets:[{spec:H.SpecFeralTankDruid,tooltip:L[H.SpecFeralTankDruid],defaultName:"Bear",iconUrl:B(C.ClassDruid,1),talents:X.data,specOptions:$,consumes:J,defaultFactionRaces:{[N.Unknown]:U.RaceUnknown,[N.Alliance]:U.RaceNightElf,[N.Horde]:U.RaceTauren},defaultGear:{[N.Unknown]:{},[N.Alliance]:{1:K.gear},[N.Horde]:{1:K.gear}}}]});class ea extends g{constructor(a,e){super(a,e,aa)}}export{ea as F};
